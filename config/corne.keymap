/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors.dtsi>

// LAYERS
#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3

// Keycodes
#define xxxxx &none

// MACROS
#define SUPER LC(LSHIFT)
#define SUPER2 LA(LC(LSHIFT))

&mt {
  tapping-term-ms = <250>;
  flavor = "tap-preferred";
};

&nice_view_spi {
    cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>;
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    td0: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_0";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&hm RGUI SEMI>, <&kp CARET>;
    };

    td1: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_1";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mt LCTRL TAB>, <&kp ESC>;
    };
    
    td2: tap_dance_2 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_2";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp COMMA>, <&kp DQT>;
    };
  };

  combos {
    compatible = "zmk,combos";
    combo_cword {
      timeout-ms = <50>;
      key-positions = <16 19>;
      bindings = <&caps_word>;
    };

    combo_vimwq {
      timeout-ms = <50>;
      key-positions = <1 2>;
      bindings = <&vim_quit>;
    };

    combo_lock {
      timeout-ms = <50>;
      key-positions = <0 11>;
      bindings = <&lock_mac>;
    };
  };

  macros {
        vim_quit: vim_quit {
            label = "ZM_vim_quit";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp ESC &kp COLON &kp W &kp Q>;
        };

        lock_mac:lock_mac {
          label = "Lock Mac";
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&macro_tap &kp LCTRL &kp LGUI &kp Q>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

    colemak {
     label = "Colemak";
      bindings = <

xxxxx         &kp Q           &kp W       &kp F       &kp P           &kp G   /**/  &kp J    &kp L           &kp U       &kp Y       &td0       xxxxx
xxxxx         &kp A           &kp R       &kp S       &hm LSHIFT T    &kp D   /**/  &kp H    &hm RSHIFT N    &kp E       &kp I       &kp O      xxxxx
xxxxx         &kp Z           &kp X       &kp C       &kp V           &kp B   /**/  &kp K    &kp M           &td2   &kp DOT     &kp FSLH        xxxxx
              &td1  &lt NUM BSPC &mt LGUI SPACE  /**/  &mt RGUI RET &lt SYM DEL &mt RALT GRAVE

      >;
    };

    num_layer {
     label = "Num";
      bindings = <

xxxxx         &none         &kp LA(LEFT)  &kp UP        &kp LA(RIGHT) &kp PG_UP  /**/  &kp PLUS   &kp N7  &kp N8  &kp N9  &kp KP_MULTIPLY       xxxxx
xxxxx         &kp SUPER     &kp LEFT      &kp DOWN      &kp RIGHT     &kp PG_DN  /**/  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH             xxxxx
xxxxx         &kp SUPER2    &none         &none         &kp HOME      &kp END    /**/  &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT               xxxxx
              &trans  &trans  &trans  /**/  &trans  &mo FUNC  &trans

      >;
    };

    sym_layer {
     label = "Symbols";
      bindings = <

xxxxx         &kp EXCL    &kp AT         &kp HASH     &kp DLLR    &kp PRCNT   /**/  &kp SQT &kp AMPS  &kp LPAR &kp RPAR &kp KP_MULTIPLY        xxxxx
xxxxx         &kp GRAVE   &kp TILDE      &none        &none       &none  /**/  &kp MINUS &kp EQUAL &kp LBRC        &kp RBRC &kp BSLH         xxxxx
xxxxx         &kp TILDE   &none          &none        &none       &none       /**/  &kp UNDER &kp PLUS  &kp LBKT        &kp RBKT &kp PIPE        xxxxx
              &trans &mo FUNC &trans  /**/  &trans &trans &trans

      >;
    };

    func_layer {
     label = "Function";
      bindings = <

xxxxx         &kp F1          &kp F2          &kp F3          &kp F4     &kp F5            /**/  &kp F6          &kp F7       &kp F8       &kp F9   &kp F10       xxxxx
xxxxx         &none           &none           &kp C_PREV      &kp C_NEXT &kp C_PLAY_PAUSE  /**/  &kp C_MUTE      &kp C_VOL_DN &kp C_VOL_UP &none    &kp F11       xxxxx
xxxxx         &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_NXT &bt BT_CLR        /**/  &none           &none        &none        &none    &kp F12       xxxxx
              &reset &trans &bootloader  /**/  &bootloader &trans &reset

      >;
    };
  };
};
